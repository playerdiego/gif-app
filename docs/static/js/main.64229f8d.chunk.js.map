{"version":3,"sources":["reportWebVitals.js","components/Search/Search.jsx","components/Card/Card.jsx","helpers/fetchGifs.js","components/Grid/Grid.jsx","hooks/useGrid.js","components/GifApp/GifApp.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Search","setCategories","useState","value","setValue","onSubmit","e","preventDefault","trim","cats","alert","type","placeholder","className","onChange","target","Card","id","url","title","src","alt","fetchGifs","category","a","fetch","resp","json","data","finalData","map","gif","images","downsized_medium","Grid","loading","state","setState","useEffect","imgs","useGrid","img","GifApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"+NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,6BCJDQ,EAAS,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEpB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OACI,uBAAMC,SAjBiB,SAACC,GACxBA,EAAEC,iBAEkB,KAAjBJ,EAAMK,QACLP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAeM,OACjCL,EAAS,KAETM,MAAM,kCAUV,UACI,uBACIC,KAAK,OACLC,YAAY,cACZC,UAAU,YACVV,MAAOA,EACPW,SAXc,SAACR,GACvBF,EAASE,EAAES,OAAOZ,UAYd,uBAAOQ,KAAK,SAASR,MAAM,e,QC9B1Ba,G,MAAO,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,MAE3B,OACI,sBAAKN,UAAU,OAAf,UACI,qBAAKO,IAAKF,EAAKG,IAAKF,IACpB,4BAAIA,S,+BCQDG,EAbA,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sEACKC,MAAM,GAAD,OAJhB,uCAIgB,cAAaF,EAAb,6BAHZ,qCAEE,cACRG,EADQ,gBAEOA,EAAKC,OAFZ,uBAEPC,EAFO,EAEPA,KACDC,EAAYD,EAAKE,KAAI,SAAAC,GACvB,MAAO,CACHd,GAAIc,EAAId,GACRC,IAAKa,EAAIC,OAAOC,iBAAiBf,IACjCC,MAAOY,EAAIZ,UAPL,kBAUPU,GAVO,2CAAH,sDCEFK,EAAO,SAAC,GAAgB,IAAfX,EAAc,EAAdA,SAElB,ECJmB,SAACA,GAEpB,MAA0BrB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAU,WACNhB,EAAUC,GACL7B,MAAK,SAAA6C,GACFF,EAAS,CACLT,KAAMW,EACNJ,SAAS,SAGtB,CAACZ,IAEGa,EDbiBI,CAAQjB,GAAzBK,EAAP,EAAOA,KAAMO,EAAb,EAAaA,QAGb,OACI,qCACA,6BAAKZ,IACL,qBAAKV,UAAU,OAAf,SAEQsB,EAAU,2CACVP,EAAKE,KAAI,SAACW,GAAD,OAAQ,cAAC,EAAD,eAAuBA,GAAZA,EAAIxB,aEZnCyB,EAAS,WAElB,MAAoCxC,mBAAS,CAAC,eAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KAEA,OACI,qCACI,+CACA,cAAC,EAAD,CAAQA,cAAeA,IAEnB0C,EAAWb,KAAI,SAAAc,GACX,OACI,cAAC,EAAD,CAAgBrB,SAAUqB,GAAfA,UCTnCC,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BzD,M","file":"static/js/main.64229f8d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\r\nimport './Search.css';\r\n\r\nexport const Search = ({setCategories}) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n\r\n    const handleSearchSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(value.trim() !== '') {\r\n            setCategories(cats => [value, ...cats ]);\r\n            setValue('');\r\n        } else {\r\n            alert('YouÂ´re looking for nothing')\r\n        }\r\n        \r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setValue(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSearchSubmit}>\r\n            <input \r\n                type='text'\r\n                placeholder='Search Gifs'\r\n                className='textInput'\r\n                value={value}\r\n                onChange={handleInputChange}\r\n            />\r\n            <input type='submit' value='Submit' />\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './Card.css';\r\n\r\nexport const Card = ({id, url, title}) => {\r\n\r\n    return (\r\n        <div className='card'>\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","const URL = 'https://api.giphy.com/v1/gifs/search';\r\n    const API = 'GkS0178B2A8J7KF9y3s2pU2aaIpcCEWt';\r\n\r\nconst fetchGifs = async (category) => {\r\n    const resp = await fetch(`${URL}?q=${category}&limit=10&api_key=${API}`);\r\n    const {data} = await resp.json();\r\n    const finalData = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            url: gif.images.downsized_medium.url,\r\n            title: gif.title\r\n        }\r\n    });\r\n    return finalData;\r\n}\r\n\r\nexport default fetchGifs;","import React from 'react';\r\nimport { Card } from '../Card/Card';\r\nimport './Grid.css';\r\nimport { useGrid } from '../../hooks/useGrid';\r\n\r\nexport const Grid = ({category}) => {\r\n\r\n    const {data, loading} = useGrid(category);\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        <div className='grid'>\r\n            {\r\n                loading ? <p>Loading...</p> :\r\n                data.map((img)=> <Card key={img.id} {...img} />)\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport fetchGifs from \"../helpers/fetchGifs\";\r\n\r\nexport const useGrid = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        fetchGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { Search } from '../Search/Search';\r\nimport { Grid } from '../Grid/Grid';\r\n\r\nexport const GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['God of War']);\r\n\r\n    return (\r\n        <>\r\n            <h1>Gif React App</h1>\r\n            <Search setCategories={setCategories} />\r\n            {\r\n                categories.map(cat => {\r\n                    return(\r\n                        <Grid key={cat} category={cat} />\r\n                    )\r\n                })\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport {GifApp} from './components/GifApp/GifApp';\n\nReactDOM.render(\n  <>\n    <GifApp />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}